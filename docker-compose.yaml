version: '3.1'

services:

  db:
    container_name: ${POSTGRE_CONTAINER_NAME}
    image: postgres
    environment:
      POSTGRES_PASSWORD: ${POSTGRE_PASSWORD}
      POSTGRES_USER: ${POSTGRE_USER}
      POSTGRES_DB:  ${POSTGRE_DB_NAME}
    networks:
      - backend
  mongo:
    container_name: ${MONGO_CONTAINER_NAME}
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DB_NAME}
    networks:
      - backend
  spring-app:
    container_name: ${APP_CONTAINER_NAME}
    build: .
    ports:
      - "8080:8080"
    environment:
      - spring.datasource.url=jdbc:postgresql://db:5432/${POSTGRE_DB_NAME}
      - spring.datasource.username=${POSTGRE_USER}
      - spring.datasource.password=${POSTGRE_PASSWORD}
      - spring.data.mongodb.database=${MONGO_DB_NAME}
      - spring.data.mongodb.host=mongo
      - spring.data.mongodb.password=${MONGO_PASSWORD}
      - spring.data.mongodb.username=${MONGO_USER}
      - spring.data.mongodb.authentication-database=admin
      - spring.profiles.active=docker
    networks:
      - backend
    depends_on:
      - db
      - mongo

networks:
  backend: